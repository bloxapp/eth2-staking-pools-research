// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/core/actions.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A request struct for creating new pool credentials
// will trigger random selection of 128 executors to DKG new pool credentials and wait for deposit
//
// How it works?
// - A user sends 32 eth and create pool request
// - The first BP that sees it, will post a CreatePoolRequest with Status 0 and will nominate the next BP as the leader for the DKG
//   (the 128 DKG participants are deterministically selected as well)
// - If during the next Epoch the DKG is successful, the BP (which is also the DKG leader) posts a CreatePoolRequest with the same ID,
//   Status 1 and the created pub key
// - If the DKG is un-successful, the BP will post a CreatePoolRequest with the same ID, Status 3 and will nominate the next BP as leader
//
// A successful DKG will reward the leader and DKG participants
// A non-successful DKG will penalized the DKG participants
type CreateNewPoolRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Status               uint32   `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	StartEpoch           uint64   `protobuf:"varint,3,opt,name=StartEpoch,proto3" json:"StartEpoch,omitempty"`
	EndEpoch             uint64   `protobuf:"varint,4,opt,name=EndEpoch,proto3" json:"EndEpoch,omitempty"`
	LeaderBlockProducer  uint64   `protobuf:"varint,5,opt,name=LeaderBlockProducer,proto3" json:"LeaderBlockProducer,omitempty"`
	CreatePubKey         []byte   `protobuf:"bytes,6,opt,name=CreatePubKey,proto3" json:"CreatePubKey,omitempty"`
	Participation        []byte   `protobuf:"bytes,7,opt,name=Participation,proto3" json:"Participation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateNewPoolRequest) Reset()         { *m = CreateNewPoolRequest{} }
func (m *CreateNewPoolRequest) String() string { return proto.CompactTextString(m) }
func (*CreateNewPoolRequest) ProtoMessage()    {}
func (*CreateNewPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c8fa121d57ad5ce, []int{0}
}

func (m *CreateNewPoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateNewPoolRequest.Unmarshal(m, b)
}
func (m *CreateNewPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateNewPoolRequest.Marshal(b, m, deterministic)
}
func (m *CreateNewPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateNewPoolRequest.Merge(m, src)
}
func (m *CreateNewPoolRequest) XXX_Size() int {
	return xxx_messageInfo_CreateNewPoolRequest.Size(m)
}
func (m *CreateNewPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateNewPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateNewPoolRequest proto.InternalMessageInfo

func (m *CreateNewPoolRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateNewPoolRequest) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CreateNewPoolRequest) GetStartEpoch() uint64 {
	if m != nil {
		return m.StartEpoch
	}
	return 0
}

func (m *CreateNewPoolRequest) GetEndEpoch() uint64 {
	if m != nil {
		return m.EndEpoch
	}
	return 0
}

func (m *CreateNewPoolRequest) GetLeaderBlockProducer() uint64 {
	if m != nil {
		return m.LeaderBlockProducer
	}
	return 0
}

func (m *CreateNewPoolRequest) GetCreatePubKey() []byte {
	if m != nil {
		return m.CreatePubKey
	}
	return nil
}

func (m *CreateNewPoolRequest) GetParticipation() []byte {
	if m != nil {
		return m.Participation
	}
	return nil
}

type StakeDeposit struct {
	PubKey               []byte   `protobuf:"bytes,1,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	TransactionHash      []byte   `protobuf:"bytes,2,opt,name=TransactionHash,proto3" json:"TransactionHash,omitempty"`
	Amount               uint64   `protobuf:"varint,3,opt,name=Amount,proto3" json:"Amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StakeDeposit) Reset()         { *m = StakeDeposit{} }
func (m *StakeDeposit) String() string { return proto.CompactTextString(m) }
func (*StakeDeposit) ProtoMessage()    {}
func (*StakeDeposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c8fa121d57ad5ce, []int{1}
}

func (m *StakeDeposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StakeDeposit.Unmarshal(m, b)
}
func (m *StakeDeposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StakeDeposit.Marshal(b, m, deterministic)
}
func (m *StakeDeposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StakeDeposit.Merge(m, src)
}
func (m *StakeDeposit) XXX_Size() int {
	return xxx_messageInfo_StakeDeposit.Size(m)
}
func (m *StakeDeposit) XXX_DiscardUnknown() {
	xxx_messageInfo_StakeDeposit.DiscardUnknown(m)
}

var xxx_messageInfo_StakeDeposit proto.InternalMessageInfo

func (m *StakeDeposit) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *StakeDeposit) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *StakeDeposit) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// CDT Withdrawal request is a request for withdrawing CDT from the pool's chain to ethereum mainnet
// The block voting committee will process the request and if valid will sign the request with it's parameters.
// With the signed approval the withdrawer could create an eth1 transaction to withdraw his CDT.
type CDTWithdrawalRequest struct {
	PubKey []byte `protobuf:"bytes,1,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	Amount uint64 `protobuf:"varint,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Status uint32 `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	// the below params are set only when status = 1
	ApprovalBlock        uint64   `protobuf:"varint,4,opt,name=ApprovalBlock,proto3" json:"ApprovalBlock,omitempty"`
	Signature            []byte   `protobuf:"bytes,5,opt,name=Signature,proto3" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDTWithdrawalRequest) Reset()         { *m = CDTWithdrawalRequest{} }
func (m *CDTWithdrawalRequest) String() string { return proto.CompactTextString(m) }
func (*CDTWithdrawalRequest) ProtoMessage()    {}
func (*CDTWithdrawalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c8fa121d57ad5ce, []int{2}
}

func (m *CDTWithdrawalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDTWithdrawalRequest.Unmarshal(m, b)
}
func (m *CDTWithdrawalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDTWithdrawalRequest.Marshal(b, m, deterministic)
}
func (m *CDTWithdrawalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDTWithdrawalRequest.Merge(m, src)
}
func (m *CDTWithdrawalRequest) XXX_Size() int {
	return xxx_messageInfo_CDTWithdrawalRequest.Size(m)
}
func (m *CDTWithdrawalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CDTWithdrawalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CDTWithdrawalRequest proto.InternalMessageInfo

func (m *CDTWithdrawalRequest) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *CDTWithdrawalRequest) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CDTWithdrawalRequest) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CDTWithdrawalRequest) GetApprovalBlock() uint64 {
	if m != nil {
		return m.ApprovalBlock
	}
	return 0
}

func (m *CDTWithdrawalRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateNewPoolRequest)(nil), "state.CreateNewPoolRequest")
	proto.RegisterType((*StakeDeposit)(nil), "state.StakeDeposit")
	proto.RegisterType((*CDTWithdrawalRequest)(nil), "state.CDTWithdrawalRequest")
}

func init() {
	proto.RegisterFile("src/core/actions.proto", fileDescriptor_5c8fa121d57ad5ce)
}

var fileDescriptor_5c8fa121d57ad5ce = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x4b, 0xeb, 0x40,
	0x14, 0x85, 0x49, 0xda, 0xe6, 0xf5, 0x0d, 0xe9, 0x7b, 0x30, 0x4a, 0x09, 0x22, 0x52, 0x42, 0x17,
	0x59, 0xb5, 0x82, 0x4b, 0x57, 0xad, 0x2d, 0x58, 0x14, 0x09, 0x49, 0x41, 0x70, 0x77, 0x3b, 0xb9,
	0x98, 0xd0, 0x9a, 0x89, 0x33, 0x37, 0x16, 0xff, 0x8e, 0x3f, 0xd2, 0xb5, 0x64, 0x1a, 0xda, 0x46,
	0x74, 0x79, 0xce, 0x3d, 0x9c, 0x64, 0xbe, 0x7b, 0x59, 0x5f, 0x2b, 0x31, 0x16, 0x52, 0xe1, 0x18,
	0x04, 0x65, 0x32, 0xd7, 0xa3, 0x42, 0x49, 0x92, 0xbc, 0xa3, 0x09, 0x08, 0xfd, 0x4f, 0x8b, 0x9d,
	0xde, 0x28, 0x04, 0xc2, 0x07, 0xdc, 0x86, 0x52, 0x6e, 0x22, 0x7c, 0x2d, 0x51, 0x13, 0xff, 0xc7,
	0xec, 0x45, 0xe2, 0x59, 0x03, 0x2b, 0x68, 0x47, 0xf6, 0x22, 0xe1, 0x7d, 0xe6, 0xc4, 0x04, 0x54,
	0x6a, 0xcf, 0x1e, 0x58, 0x41, 0x2f, 0xaa, 0x15, 0xbf, 0x60, 0x2c, 0x26, 0x50, 0x34, 0x2f, 0xa4,
	0x48, 0xbd, 0x96, 0xc9, 0x1f, 0x39, 0xfc, 0x8c, 0x75, 0xe7, 0x79, 0xb2, 0x9b, 0xb6, 0xcd, 0x74,
	0xaf, 0xf9, 0x25, 0x3b, 0xb9, 0x47, 0x48, 0x50, 0x4d, 0x37, 0x52, 0xac, 0x43, 0x25, 0x93, 0x52,
	0xa0, 0xf2, 0x3a, 0x26, 0xf6, 0xd3, 0x88, 0xfb, 0xcc, 0xdd, 0xfd, 0x6d, 0x58, 0xae, 0xee, 0xf0,
	0xdd, 0x73, 0x06, 0x56, 0xe0, 0x46, 0x0d, 0x8f, 0x0f, 0x59, 0x2f, 0x04, 0x45, 0x99, 0xc8, 0x0a,
	0xa8, 0x5e, 0xec, 0xfd, 0x31, 0xa1, 0xa6, 0xe9, 0xa7, 0xcc, 0x8d, 0x09, 0xd6, 0x38, 0xc3, 0x42,
	0xea, 0x8c, 0xaa, 0xf7, 0xd5, 0x9d, 0x96, 0x89, 0xd7, 0x8a, 0x07, 0xec, 0xff, 0x52, 0x41, 0xae,
	0x77, 0xf4, 0x6e, 0x41, 0xa7, 0x06, 0x80, 0x1b, 0x7d, 0xb7, 0xab, 0x86, 0xc9, 0x8b, 0x2c, 0x73,
	0xaa, 0x29, 0xd4, 0xca, 0xff, 0xa8, 0x10, 0xcf, 0x96, 0x8f, 0x19, 0xa5, 0x89, 0x82, 0x2d, 0xec,
	0x11, 0xff, 0xf6, 0xc9, 0x43, 0x91, 0x7d, 0x5c, 0x74, 0xb4, 0x82, 0x56, 0x63, 0x05, 0x43, 0xd6,
	0x9b, 0x14, 0x85, 0x92, 0x6f, 0xb0, 0x31, 0xb4, 0x6a, 0xce, 0x4d, 0x93, 0x9f, 0xb3, 0xbf, 0x71,
	0xf6, 0x9c, 0x03, 0x95, 0x0a, 0x0d, 0x62, 0x37, 0x3a, 0x18, 0xd3, 0xee, 0x93, 0x33, 0xba, 0xae,
	0xce, 0x64, 0xe5, 0x98, 0xfb, 0xb8, 0xfa, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x92, 0x3a, 0xc4, 0x68,
	0x39, 0x02, 0x00, 0x00,
}
