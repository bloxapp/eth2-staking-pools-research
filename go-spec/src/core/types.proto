syntax = "proto3";
package state;

option go_package = ".;core";

import "src/core/actions.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message State {
    // time
    uint64 GenesisTime = 10;
    uint64 CurrentSlot = 11;
    PoolBlockHeader LatestBlockHeader = 12;

    // past
    repeated SlotAndBytes BlockRoots = 21;
    repeated SlotAndBytes StateRoots = 22;
    repeated SlotAndBytes Randao = 23;
    bytes GenesisValidatorsRoot = 24;

    // Finalization & justification
    repeated PendingAttestation PreviousEpochAttestations = 31;
    repeated PendingAttestation CurrentEpochAttestations = 32;
    bytes JustificationBits = 33 [(gogoproto.moretags) = "ssz-max:\"2048\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitvector4"];
    Checkpoint PreviousJustifiedCheckpoint = 34;
    Checkpoint CurrentJustifiedCheckpoint = 35;
    Checkpoint FinalizedCheckpoint = 36;

    // network
    repeated BlockProducer BlockProducers = 41;
    repeated Pool Pools = 42;
}

message BlockProducer {
    uint64 Id = 1;
    bytes PubKey = 2;
    uint64 CDTBalance = 3;
    uint64 Stake = 4; // In ETH
    bool Slashed = 5;
    bool Active = 6;
    uint64 ExitEpoch = 7;
    uint64 ActivationEpoch = 8;
    uint64 ActivationEligibilityEpoch = 9;
    uint64 WithdrawableEpoch = 10;
}

message Pool {
    uint64 Id = 1;
    bool Active = 2;
    bytes PubKey = 3;
    repeated uint64 SortedCommittee = 4;
}

message PoolBlockBody {
    bytes RandaoReveal = 1;
    repeated Attestation attestations = 2;
    repeated CreateNewPoolRequest NewPoolReq = 3;
}

message PoolBlock {
    uint64 Slot = 1;
    uint64 Proposer = 2;
    bytes ParentRoot = 3;
    bytes StateRoot = 4;
    PoolBlockBody Body = 5;
}

message SignedPoolBlock {
    PoolBlock Block = 1;
    bytes Signature = 2;
}

message PoolBlockHeader {
    uint64 Slot = 1;
    uint64 ProposerIndex = 2;
    bytes ParentRoot = 3;
    bytes StateRoot = 4;
    bytes BodyRoot = 5;
}

message PendingAttestation {
    bytes aggregation_bits = 1 [(gogoproto.moretags) = "ssz-max:\"2048\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
    AttestationData data = 2;
    uint64 InclusionDelay = 3;
    uint64 ProposerIndex = 4;
}

message Attestation {
    // A bitfield representation of validator indices that have voted exactly
    // the same vote and have been aggregated into this attestation.
    bytes aggregation_bits = 1 [(gogoproto.moretags) = "ssz-max:\"2048\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
    AttestationData data = 2;
    bytes signature = 3; // 96 byte BLS aggregate signature.
}

message AttestationData {
    // Slot of the attestation attesting for.
    uint64 slot = 1;
    // The committee index that submitted this attestation.
    uint32 committee_index = 2;
    // 32 byte root of the LMD GHOST block vote.
    bytes beacon_block_root = 3;
    // The most recent justified checkpoint in the beacon state
    Checkpoint source = 4;
    // The checkpoint attempting to be justified for the current epoch and its epoch boundary block
    Checkpoint target = 5;
    // The committees execution tasks.
    repeated ExecutionSummary ExecutionSummaries = 6;
}

message BeaconDuty {
    int32 Type = 1; // 0 - attestation, 1 - proposal, 2 - aggregation
    uint64 Committee = 2;
    uint64 Slot = 3;
    bool Finalized = 4;
    bytes Participation = 5 [(gogoproto.moretags) = "ssz-max:\"3\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"]; // 24 bit of the executors (by order) which executed this duty
}

message ExecutionSummary {
    uint64 PoolId = 1;
    uint64 Epoch = 2;
    repeated BeaconDuty Duties = 3;
}

message Checkpoint {
    // A checkpoint is every epoch's first slot. The goal of Casper FFG
    // is to link the check points together for justification and finalization.
    // Epoch the checkpoint references.
    uint64 epoch = 1;
    // Block root of the checkpoint references.
    bytes root = 2;
}

message SlotAndBytes {
    uint64 Slot = 1;
    bytes Bytes = 2;
}

message StateCommitment {
    bytes StateRoot = 1; // pools chain state root as of the last block at said epoch
    bytes Epoch = 2;
    repeated bytes Committee = 3; // see https://github.com/ethereum/annotated-spec/blob/master/phase1/beacon-chain.md#compactcommittee
    bytes AuxCommitteesRoot = 4;
    repeated bytes NextCommittee = 5;
}

message ForkData {
    bytes CurrentVersion = 1;
    bytes GenesisValidatorRoot = 2;
}