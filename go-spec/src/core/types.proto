syntax = "proto3";
package state;

option go_package = ".;core";

import "src/core/actions.proto";

message State {
    uint64 GenesisTime = 1;
    uint64 CurrentEpoch = 2;
    repeated EpochAndBytes BlockRoots = 3;
    repeated EpochAndBytes StateRoots = 4;
    repeated EpochAndBytes Seeds = 5;
    repeated BlockProducer BlockProducers = 6;
    repeated Pool Pools = 7;
    repeated uint64 Slashings = 8;
    repeated ETH1Data ETH1Blocks = 9;
    repeated ETH2Data ETH2Epochs = 10;
}

message BlockProducer {
    uint64 Id = 1;
    bytes PubKey = 2;
    uint64 Balance = 3;
    uint64 Stake = 4;
    bool Slashed = 5;
    bool Active = 6;
    uint64 ExitEpoch = 7;
}

message Pool {
    uint64 Id = 1;
    bool Active = 2;
    bytes PubKey = 3;
    repeated uint64 SortedCommittee = 4;
}

message BeaconDuty {
    int32 Type = 1; // 0 - attestation, 1 - proposal, 2 - aggregation
    uint64 Committee = 2;
    uint64 Slot = 3;
    bool Finalized = 4;
    bytes Participation = 5; // 128 bit of the executors (by order) which executed this duty
}

message ExecutionSummary {
    uint64 PoolId = 1;
    uint64 Epoch = 2;
    repeated BeaconDuty Duties = 3;
}



message BlockBody {
    uint64 Proposer = 1;
    uint64 Epoch = 2;
    bytes ParentBlockRoot = 3;
    bytes Randao = 4;
    ETH1Data ETH1Block = 5;
    ETH2Data ETH2Epoch = 6;
    repeated ExecutionSummary ExecutionSummaries = 7;
    repeated CreateNewPoolRequest NewPoolReq = 8;
    repeated StakeDeposit StakeDeposits = 9;
}

message BlockHeader {
    bytes BlockRoot = 1;
    bytes StateRoot = 2;
    bytes Signature = 3;
}

message EpochAndBytes {
    uint64 Epoch = 1;
    bytes Bytes = 2;
}

// represents the state of the deposit contract for block producers on eth1
message ETH1Data {
    bytes DepositsRoot = 1;
    uint64 Block = 2;
    bytes BlockHash = 3;
}

// represents the last finalized eth2 state and it's state root
message ETH2Data {
    uint64 LastFinalizedEpoch = 1;
    bytes StateRoot = 2;
}