// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.11.4
// source: share_distro.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShareDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromParticipant *Participant `protobuf:"bytes,2,opt,name=from_participant,json=fromParticipant,proto3" json:"from_participant,omitempty"`
	ToParticipant   *Participant `protobuf:"bytes,3,opt,name=to_participant,json=toParticipant,proto3" json:"to_participant,omitempty"`
	Share           []byte       `protobuf:"bytes,4,opt,name=share,proto3" json:"share,omitempty"`
	Commitments     [][]byte     `protobuf:"bytes,5,rep,name=commitments,proto3" json:"commitments,omitempty"`
	PoolId          uint32       `protobuf:"varint,6,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	Epoch           uint32       `protobuf:"varint,7,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *ShareDistribution) Reset() {
	*x = ShareDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_distro_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDistribution) ProtoMessage() {}

func (x *ShareDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_share_distro_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDistribution.ProtoReflect.Descriptor instead.
func (*ShareDistribution) Descriptor() ([]byte, []int) {
	return file_share_distro_proto_rawDescGZIP(), []int{0}
}

func (x *ShareDistribution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShareDistribution) GetFromParticipant() *Participant {
	if x != nil {
		return x.FromParticipant
	}
	return nil
}

func (x *ShareDistribution) GetToParticipant() *Participant {
	if x != nil {
		return x.ToParticipant
	}
	return nil
}

func (x *ShareDistribution) GetShare() []byte {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *ShareDistribution) GetCommitments() [][]byte {
	if x != nil {
		return x.Commitments
	}
	return nil
}

func (x *ShareDistribution) GetPoolId() uint32 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *ShareDistribution) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

var File_share_distro_proto protoreflect.FileDescriptor

var file_share_distro_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x01, 0x0a, 0x11, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3a, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x74,
	0x6f, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x0d, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x32, 0x6a, 0x0a, 0x18, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x42, 0x10, 0x5a, 0x0e, 0x2f, 0x70, 0x6f, 0x6f, 0x6c, 0x2d,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_share_distro_proto_rawDescOnce sync.Once
	file_share_distro_proto_rawDescData = file_share_distro_proto_rawDesc
)

func file_share_distro_proto_rawDescGZIP() []byte {
	file_share_distro_proto_rawDescOnce.Do(func() {
		file_share_distro_proto_rawDescData = protoimpl.X.CompressGZIP(file_share_distro_proto_rawDescData)
	})
	return file_share_distro_proto_rawDescData
}

var file_share_distro_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_share_distro_proto_goTypes = []interface{}{
	(*ShareDistribution)(nil), // 0: v1.ShareDistribution
	(*Participant)(nil),       // 1: v1.Participant
	(*StatusResponse)(nil),    // 2: v1.StatusResponse
}
var file_share_distro_proto_depIdxs = []int32{
	1, // 0: v1.ShareDistribution.from_participant:type_name -> v1.Participant
	1, // 1: v1.ShareDistribution.to_participant:type_name -> v1.Participant
	0, // 2: v1.ShareDistributionService.NewShare:input_type -> v1.ShareDistribution
	2, // 3: v1.ShareDistributionService.NewShare:output_type -> v1.StatusResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_share_distro_proto_init() }
func file_share_distro_proto_init() {
	if File_share_distro_proto != nil {
		return
	}
	file_participant_proto_init()
	file_response_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_share_distro_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_share_distro_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_share_distro_proto_goTypes,
		DependencyIndexes: file_share_distro_proto_depIdxs,
		MessageInfos:      file_share_distro_proto_msgTypes,
	}.Build()
	File_share_distro_proto = out.File
	file_share_distro_proto_rawDesc = nil
	file_share_distro_proto_goTypes = nil
	file_share_distro_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShareDistributionServiceClient is the client API for ShareDistributionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShareDistributionServiceClient interface {
	NewShare(ctx context.Context, in *ShareDistribution, opts ...grpc.CallOption) (*StatusResponse, error)
}

type shareDistributionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShareDistributionServiceClient(cc grpc.ClientConnInterface) ShareDistributionServiceClient {
	return &shareDistributionServiceClient{cc}
}

func (c *shareDistributionServiceClient) NewShare(ctx context.Context, in *ShareDistribution, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/v1.ShareDistributionService/NewShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShareDistributionServiceServer is the server API for ShareDistributionService service.
type ShareDistributionServiceServer interface {
	NewShare(context.Context, *ShareDistribution) (*StatusResponse, error)
}

// UnimplementedShareDistributionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShareDistributionServiceServer struct {
}

func (*UnimplementedShareDistributionServiceServer) NewShare(context.Context, *ShareDistribution) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewShare not implemented")
}

func RegisterShareDistributionServiceServer(s *grpc.Server, srv ShareDistributionServiceServer) {
	s.RegisterService(&_ShareDistributionService_serviceDesc, srv)
}

func _ShareDistributionService_NewShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareDistribution)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShareDistributionServiceServer).NewShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ShareDistributionService/NewShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShareDistributionServiceServer).NewShare(ctx, req.(*ShareDistribution))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShareDistributionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ShareDistributionService",
	HandlerType: (*ShareDistributionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewShare",
			Handler:    _ShareDistributionService_NewShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "share_distro.proto",
}
